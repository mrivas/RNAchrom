#!/usr/bin/env python
import argparse, sys, HTSeq
from collections import defaultdict
import RNAchrom

###########################################################
# Get command line arguments
def getParser():
	parser = argparse.ArgumentParser(description='Counts the number of RNA and DNA mates per gene. Only consider mates if they do not overlap the same genetic feature ( as described in the input annotation file)')
	parser.add_argument('-a',type=str,dest="aFiles",help="STR. Comma separated list of annotation files, each being the output of annotateBAM")
	parser.add_argument('-g',type=str,dest="genes",help="STR. List of genes and their respective lengths.")
	parser.add_argument('-d',type=int,dest="dist",help="INT. Mates with distances between 'rna' and 'dna' lower or equal than this value will be discarded. ")
	parser.add_argument('-o',type=str,dest="oFile",help="STR. Name of output file.")

	if len(sys.argv) == 1:
		print >> sys.stderr,parser.print_help()
		exit(0)
	return parser
#########################################################
def getCoord(line):
	line=line.strip().split("\t")
	rnaChrom,rnaStart,rnaEnd,rnaStrand=line[0],int(line[1]),int(line[2]),line[3]
	dnaChrom,dnaStart,dnaEnd,dnaStrand=line[4],int(line[5]),int(line[6]),line[7]
	rnaAnnot,dnaAnnot=line[8],line[9]

#########################################################
def main():
	args = getParser().parse_args()
	aFiles = args.aFiles.split(",")
	genes = args.genes
	dist = args.dist
	oFile = args.oFile

	# Count RNA and DNA reads
	countsRNA,countsDNA=defaultdict(int),defaultdict(int)

	for aFile in aFiles:
		for line in open(aFile,"r"):
			line=line.strip().split("\t")
			rnaChrom,rnaStart,rnaEnd,rnaStrand=line[0],int(line[1]),int(line[2]),line[3]
			dnaChrom,dnaStart,dnaEnd,dnaStrand=line[4],int(line[5]),int(line[6]),line[7]
			rnaAnnots,dnaAnnots=set(line[8].split(",")),set(line[9].split(","))
			
			if rnaChrom==dnaChrom: d=max( dnaEnd-rnaStart, rnaEnd-dnaStart  ) # max distance between mates
			else:                  d=dist+1 # if inter-chrom give to it a value greater than dist
			# Only consider mates farther apart than dist
			if d<0: print "Warning: dist is lower than zero"
			if d>dist:
				for rnaAnnot in rnaAnnots:
					rnaAnnot=rnaAnnot.split("|")[0]
					if rnaAnnot not in dnaAnnots: countsRNA[rnaAnnot] += 1
				for dnaAnnot in dnaAnnots:
					dnaAnnot=dnaAnnot.split("|")[0]
					if dnaAnnot not in rnaAnnots: countsDNA[dnaAnnot] += 1
	# Save results
	out=open(oFile,"w")
	for line in open(genes,"r"):
		geneID,geneLength=line.strip().split("\t")
		output=[ geneID, geneLength,countsRNA[geneID],countsDNA[geneID] ]
		print>>out, "\t".join(map(str,output))
				
	out.close()
##########################################################
if __name__ == '__main__':
	main()
